$ ./mvnw compile exec:java -Dexec.mainClass="io.pivotal.ByteBufferBenchmark"
# JMH version: 1.21
# VM version: JDK 11.0.1, OpenJDK 64-Bit Server VM, 11.0.1+13-LTS
# VM invoker: /Users/acogoluegnes/.sdkman/candidates/java/11.0.1-zulu/bin/java
# VM options: -Dmaven.home=/Users/acogoluegnes/prog -Dmaven.multiModuleProjectDirectory=/Users/acogoluegnes/prog/java-benchmark
# Warmup: 5 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.pivotal.ByteBufferBenchmark.write

...

# Run complete. Total time: 00:33:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  (allocation)  (byteBufferSize)  (frameSize)   Mode  Cnt       Score       Error  Units
ByteBufferBenchmark.write        direct              4096         1500  thrpt    5  317225,430 ±  3972,404  ops/s
ByteBufferBenchmark.write        direct              4096         3000  thrpt    5  166314,108 ±  5282,036  ops/s
ByteBufferBenchmark.write        direct              4096         6000  thrpt    5   87038,492 ±  2199,727  ops/s
ByteBufferBenchmark.write        direct              4096        12000  thrpt    5   45025,310 ±   326,702  ops/s
ByteBufferBenchmark.write        direct              4096        20000  thrpt    5   26702,574 ±   419,051  ops/s
ByteBufferBenchmark.write        direct              8192         1500  thrpt    5  330427,443 ±  3384,928  ops/s
ByteBufferBenchmark.write        direct              8192         3000  thrpt    5  173398,232 ±  6730,496  ops/s
ByteBufferBenchmark.write        direct              8192         6000  thrpt    5   85574,918 ±  1330,425  ops/s
ByteBufferBenchmark.write        direct              8192        12000  thrpt    5   45304,022 ±  1598,322  ops/s
ByteBufferBenchmark.write        direct              8192        20000  thrpt    5   27220,896 ±   727,442  ops/s
ByteBufferBenchmark.write        direct             12288         1500  thrpt    5  331916,972 ± 16731,977  ops/s
ByteBufferBenchmark.write        direct             12288         3000  thrpt    5  166183,246 ±  3944,638  ops/s
ByteBufferBenchmark.write        direct             12288         6000  thrpt    5   85176,121 ±  1963,456  ops/s
ByteBufferBenchmark.write        direct             12288        12000  thrpt    5   44717,557 ±  1186,071  ops/s
ByteBufferBenchmark.write        direct             12288        20000  thrpt    5   29506,375 ±   466,128  ops/s
ByteBufferBenchmark.write        direct             16384         1500  thrpt    5  367883,471 ± 36572,155  ops/s
ByteBufferBenchmark.write        direct             16384         3000  thrpt    5  173280,712 ±  4987,700  ops/s
ByteBufferBenchmark.write        direct             16384         6000  thrpt    5   89318,739 ±  1379,519  ops/s
ByteBufferBenchmark.write        direct             16384        12000  thrpt    5   46045,690 ±   644,290  ops/s
ByteBufferBenchmark.write        direct             16384        20000  thrpt    5   27592,565 ±   597,591  ops/s
ByteBufferBenchmark.write         array              4096         1500  thrpt    5  351006,608 ± 14291,131  ops/s
ByteBufferBenchmark.write         array              4096         3000  thrpt    5  168062,910 ±  4034,973  ops/s
ByteBufferBenchmark.write         array              4096         6000  thrpt    5   86061,355 ±  2210,909  ops/s
ByteBufferBenchmark.write         array              4096        12000  thrpt    5   44130,799 ±  1112,521  ops/s
ByteBufferBenchmark.write         array              4096        20000  thrpt    5   26540,700 ±   628,819  ops/s
ByteBufferBenchmark.write         array              8192         1500  thrpt    5  336966,126 ± 10249,026  ops/s
ByteBufferBenchmark.write         array              8192         3000  thrpt    5  174082,635 ±  7164,266  ops/s
ByteBufferBenchmark.write         array              8192         6000  thrpt    5   79213,805 ±  1125,809  ops/s
ByteBufferBenchmark.write         array              8192        12000  thrpt    5   42537,059 ±   966,608  ops/s
ByteBufferBenchmark.write         array              8192        20000  thrpt    5   26950,277 ±   458,024  ops/s
ByteBufferBenchmark.write         array             12288         1500  thrpt    5  354458,798 ±  9123,984  ops/s
ByteBufferBenchmark.write         array             12288         3000  thrpt    5  173825,573 ±  4689,310  ops/s
ByteBufferBenchmark.write         array             12288         6000  thrpt    5   82899,821 ±  2410,344  ops/s
ByteBufferBenchmark.write         array             12288        12000  thrpt    5   42427,223 ±   463,955  ops/s
ByteBufferBenchmark.write         array             12288        20000  thrpt    5   29216,849 ±   980,012  ops/s
ByteBufferBenchmark.write         array             16384         1500  thrpt    5  328976,346 ± 27288,103  ops/s
ByteBufferBenchmark.write         array             16384         3000  thrpt    5  166294,163 ±  3366,507  ops/s
ByteBufferBenchmark.write         array             16384         6000  thrpt    5   89451,960 ±   590,837  ops/s
ByteBufferBenchmark.write         array             16384        12000  thrpt    5   45500,318 ±  2716,195  ops/s
ByteBufferBenchmark.write         array             16384        20000  thrpt    5   29080,471 ±   489,835  ops/s